ylab = "Likelihood",
main = expression(paste("Likelihood as a function of", pi)))
## Problem 1
# functions for part a
# likelihood function
likelihood <- curve((1-x)^28, xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
loglike <- curve(log((1-x)^28),
xlab = expression(pi),
ylab = "Log Likelihood",
main = expression(paste("Log likelihood as a function of ", pi)))
(1-0.05)^28
(1-0)^28
l0 <- (1-0.05)^28 # 0.238
# part c
l1 <- (1-0)^28 # 1
-2log(l0/l1)
-2*log(l0/l1)
qchisq(0.05, 1, lower.tail=F)
tstat <- -2*log(l0/l1) # 2.872
pchisq(tstat, 1, log=F, lower.tail=F)
(0-0.0633)/sqrt(0.0633*(1-0.0633)/28) # -1.96
qchisq(test, 1, lower.tail=F, log=F)
test <- (0-0.0633)/sqrt(0.0633*(1-0.0633)/28)
qchisq(test, 1, lower.tail=F, log=F)
test
qchisq(abs(test), 1, lower.tail=F, log=F)
qchisq(abs(test), 1, lower.tail=F, log.p=F)
up.b <- 0.0633
l0 <- (1-up.b)^28
l1 <- (1-0)^28
tstat <- -2*log(l0/l1)
qchisq(tstat, 1, log=F, lower.tail=F)
2*(249*log(249/(0.25*1103))+854*log(854/(0.75*1103)))
pchisq(tstat, 1, log=F, lower.tail=F)
up.b <- 0.0663
l0 <- (1-up.b)^28
l1 <- (1-0)^28
tstat <- -2*log(l0/l1)
pchisq(tstat, 1, log=F, lower.tail=F)
tstat <- -2*log(l0/l1)
qchisq(0.05, df=1, lower.tail = F)
tstat
l0
l1
qchisq(0.10, df=1, lower.tail = F)
1 - exp(chi.thresh/-56)
chi.thresh <- qchisq(0.10, df=1, lower.tail = F) # 2.705
1 - exp(chi.thresh/-56)
up.c <- 1 - exp(chi.thresh/-56)
l0 <- (1 - up.c)^28
tstat <- -2*log(l0/l1)
pchisq(tsat, 1, log=F, lower.tail=F)
pchisq(tstat, 1, log=F, lower.tail=F)
diff.prop <- p1 - p2
p1 <- 0.001304 # proportion of smokers who die of lung cancer
p2 <- 0.000121 # proportion of non-smokers who die of lung cancer
diff.prop <- p1 - p2
RR <- p1/p2
diff. prop
diff.prop
RR
OR <- p1*(1-p2)/(p2*(1-p1))
OR
(p1/(1-p1))/(p2/(1-p2))
(1-p1)/(1-p2)
19934-198
19942-193
asprin <- matrix(c(198, 193, (19334-198), (19342-193)))
asprin
aspirin <- matrix(c(198, 193, (19334-198), (19342-193)))
aspirin <- matrix(c(198, 193, (19334-198), (19342-193)), nrow=2)
aspirin
aspirin <- matrix(c(198, 193, (19934-198), (19942-193)), nrow=2)
aspirin
dimnames(aspirin) <- list(Aspirin=c("Aspirin", "Placebo"),
MI=c("Yes", "No"))
aspirin
aspirin <- matrix(c(198, 193, (19934-198), (19942-193)), nrow=2)
dimnames(aspirin) <- list(Treatment=c("Aspirin", "Placebo"),
MI=c("Yes", "No"))
aspirin
xtabs(~Treatment+MI, data=aspirin)
xtabs(~ Treatment+MI, data=aspirin)
addmargins(aspirin)
aspirin
aspirin <- addmargins(aspirin)
aspirin
odds.ratio <- function(p1, p2) {
OR <- p1*(1-p2)/(p2*(1-p1))
return(OR)
}
dim(aspirin)
aspirin <- matrix(c(198, 193, (19934-198), (19942-193)), nrow=2)
dimnames(aspirin) <- list(Treatment=c("Aspirin", "Placebo"),
MI=c("Yes", "No"))
dim(aspirin)
odds.ratio <- function(mat) {
OR <- mat[1,1]*mat[2,2]/(mat[1,2]*mat[2,1])
return(OR)
}
odds.ratio(aspirin)
aspirin[1,1]/aspirin[1,2]/(aspirin[2,1]/aspirin[2,2])
(odds.ratio(aspirin))^-1
pnorm(0.05)
qchisq(0.05, 1, lower.tail=F)
?norm
?pnrom
?pnorm
?qnorm
qnorm(0.05)
qnorm(0.025)
Z <- qnorm(0.05/2)
Z
Z <- qnorm(0.05/2, lower.tail=F)
Z
?lapply
?sapply
logSE <- sqrt(sum(sapply(aspirin, function(x) 1/x)))
logSE
sqrt(1/aspirin[1,1]+1/aspirin[1,2]+1/aspirin[2,1]+1/aspirin[2,2])
log.theta <- log(odds.ratio(aspirin))
Z <- qnorm(0.05/2, lower.tail=F)
logSE <- sqrt(sum(sapply(aspirin, function(x) 1/x)))
upper.bound <- log.theta+Z*logSE
lower.bound <- log.theta-Z*logSE
exp(lower.bound)
exp(upper.bound)
maspirin <- matrix(c(189, 104, 10845, 10933), nrow=2)
maspirin
masp <- matrix(c(189, 104, 10845, 10933), nrow=2)
log.theta <- log(odds.ratio(maspirin))
sqrt((1-p1)/11034*p1+(1-p2)/(11037*p2))
masp <- matrix(c(189, 104, 10845, 10933), nrow=2)
log.theta <- log(odds.ratio(maspirin)) #point estimate
Z <- qnorm(0.05/2, lower.tail=F)
p1 <- 189/11034
p2 <- 104/11037
logSE <- sqrt((1-p1)/11034*p1+(1-p2)/(11037*p2))
log.upper <- log(p1/p2)+Z*logSE
log.lower <- log(p1/p2)-Z*logSE
exp(log.lower)
exp(log.upper)
p2 <- 189/11034
p1 <- 104/11037
logSE <- sqrt((1-p1)/11034*p1+(1-p2)/(11037*p2))
log.upper <- log(p1/p2)+Z*logSE
log.lower <- log(p1/p2)-Z*logSE
exp(log.lower)
exp(log.upper)
p1 <- 189/11034
p2 <- 104/11037
Z
Z <- qnorm(0.05/2, lower.tail=F)
p1 <- 189/11034
p2 <- 104/11037
logSE <- sqrt((1-p1)/(11034*p1)+(1-p2)/(11037*p2))
log.upper <- log(p1/p2)+Z*logSE
log.lower <- log(p1/p2)-Z*logSE
exp(log.lower)
exp(log.upper)
Z <- qnorm(0.10/2, lower.tail=F)
log.upper <- log(p1/p2)+Z*logSE
log.lower <- log(p1/p2)-Z*logSE
exp(log.lower) # 1.43
exp(log.upper) # 2.30
belief <- matrix(c(509, 398, 116, 104), nrow=2)
belief
dimnames(belief) <- list(Gender=c("F", "M"), Belief=c("Y", "N"))
belief
belief <- addmargins(belief)
belif
belief
n <- belief[3,3]
n
mu <- matrix()
for (i in 1:2) {
for (j in 1:2) {
newmu <- belief[i,3]*belief[3,j]/n
mu[i,j] <- newmu
}
}
belief[i,3]
belief[3,j]
i
mu <- matrix(NA, nrow=2, ncol=2)
for (i in 1:2) {
for (j in 1:2) {
newmu <- belief[i,3]*belief[3,j]/n
mu[i,j] <- newmu
}
}
mu
belief <- matrix(c(509, 398, 116, 104), nrow=2)
dimnames(belief) <- list(Gender=c("F", "M"), Belief=c("Y", "N"))
chisq.test(belief)
chisq.test(belief)$statistic
chisq.test(belief)$parameter
chisq.test(belief)$expected
mu
sum((belief[1:2,1:2]-mu)^2/mu)
belief
sum((belief-mu)^2/mu)
chisq.test(belief, correct=F)$expected
chisq.test(belief, correct=F)
df <- (2-1)(2-1) # df = 1 but show calculation anyways
df <- (2-1)*(2-1) # df = 1 but show calculation anyways
df
pchisq(chi.sq, df=1)
chi.sq <- sum((belief[1:2,1:2]-mu)^2/mu) # chi-square value = 0.82458
pchisq(chi.sq, df=1)
pchisq(chi.sq, df=1, lower.tail=F)
chisq.test(belief, correct=F)$expected
mu # by hand
ratios <- vector(belief[1:2, 1:2]/mu)
ratios <- belief[1:2, 1:2]/mu
ratios
log.ratios <- log(belief[1:2, 1:2]/mu)
log.score <- vector()
for (i in 1:2) {
for (j in 1:2) {
newlog.score <- belief[i,j]*log.ratios[i,j]
log.score <- append(log.score, newlog.score)
}
}
log.score
G.sq <- 2*sum(log.score)
G.sq
qchisq(G.sq, df, lower.tail=F)
pchisq(G.sq, df, lower.tail=F)
likelihood <- curve((1-x)^28,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
likelihood <- curve((1-x)^28,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
likelihood <- curve((1-x)^28,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)), cex=0.5)
loglike <- curve(log((1-x)^28),
xlab = expression(pi),
ylab = "Log Likelihood",
main = expression(paste("Log likelihood as a function of ", pi)), cex=0.5)
pchisq(tstat, 1, log=F, lower.tail=F) # 0.0901
l0 <- (1-0.05)^28 # 0.238
l1 <- (1-0)^28 # 1
pchisq(tstat, 1, log=F, lower.tail=F) # 0.0901
tstat
l0 <- (1-0.05)^28 # 0.238
l0
l1
tstat <- -2*log(l0/l1) # 2.872
tstat
pchisq(2.872424, 1)
pchisq(2.872424, 1, log=F, lower.tail=F)
tstat
pchisq(tstat, 1, log=F, lower.tail=F) # 0.0901
up.b <- 0.0663
l0 <- (1-up.b)^28 # 0.146
l1 <- (1-0)^28 # 1
tstat <- -2*log(l0/l1) # 3.8416
qchisq(0.05, df=1, lower.tail = F) # 3.8415
pchisq(tstat, 1, log=F, lower.tail=F) # 0.05
up.b <- 0.0663
l0 <- (1-up.b)^28
l0
l1 <- (1-0)^28 # 1
tstat <- -2*log(l0/l1)
tstat
qchisq(0.05, df=1, lower.tail = F) # 3.8415
pchisq(tstat, 1, log=F, lower.tail=F) # 0.05
(1-p1)/(1-p2)
p1
p1 <- 0.001304 # proportion of smokers who die of lung cancer
p2 <- 0.000121 # proportion of non-smokers who die of lung cancer
(1-p1)/(1-p2)
aspirin <- matrix(c(198, 193, (19934-198), (19942-193)), nrow=2)
dimnames(aspirin) <- list(Treatment=c("Aspirin", "Placebo"),
MI=c("Yes", "No"))
addmargins(aspirin)
odds.ratio(aspirin) # 1.03 = odds ratio of MI for Aspirin/Placebo
prop.table(aspirin)
chisq.test(aspirin)
chisq.test(aspirin, correct=F)
log.theta <- log(odds.ratio(aspirin))
Z <- qnorm(0.05/2, lower.tail=F)
logSE <- sqrt(sum(sapply(aspirin, function(x) 1/x)))
upper.bound <- log.theta+Z*logSE
lower.bound <- log.theta-Z*logSE
exp(lower.bound) # 0.841
exp(upper.bound) # 0.125
masp <- matrix(c(189, 104, 10845, 10933), nrow=2) # define the matrix
masp
Z <- qnorm(0.05/2, lower.tail=F) # get the Z-score (1.96)
p1 <- 189/11034 # get p1 and p2 from
p2 <- 104/11037
logSE <- sqrt((1-p1)/(11034*p1)+(1-p2)/(11037*p2))
log.upper <- log(p1/p2)+Z*logSE
log.lower <- log(p1/p2)-Z*logSE
exp(log.lower) # 1.43
exp(log.upper) # 2.30
masp <- matrix(c(189, 104, 10845, 10933), nrow=2) # define the matrix
masp
Z <- qnorm(0.05/2, lower.tail=F) # get the Z-score (1.96)
p1 <- 189/11034 # get p1 and p2 from ni1/ni+
p2 <- 104/11037
logSE <- sqrt((1-p1)/(11034*p1)+(1-p2)/(11037*p2))
log.upper <- log(p1/p2)+Z*logSE
log.lower <- log(p1/p2)-Z*logSE
exp(log.lower) # 1.43
exp(log.upper) # 2.30
likelihood <- curve((1-x)^28, cex=0.5,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
likelihood <- curve((1-x)^28, cex.main=0.5,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
likelihood <- curve((1-x)^28, cex.main=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
likelihood <- curve((1-x)^28, cex.main=1,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
loglike <- curve(log((1-x)^28), cex.main=1,
xlab = expression(pi),
ylab = "Log Likelihood",
main = expression(paste("Log likelihood as a function of ", pi)))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(5.1,4.1,4.1,2.1)
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(5.1,4.1,4.1,2.1))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(1,1,1,5))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(1,1,1,1))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(10,10,10,10))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(0.1,0.1,0.1,0.1))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(3.1,3.1,3.1,2.1))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(4.1,3.1,3.1,2.1))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(6.1,3.1,3.1,2.1))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(6.1,6.1,6.1,6.1))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(1,1,1,1))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
?mar
?par
par(mai=c(1.02,0.82,0.82,0.42))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mai=c(0.5,0.52,0.52,0.42))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mai=c(0.7,0.72,0.72,0.42))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mai=c(1,1,1,0.42))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mai=c(1.5,1.5,1.5,0.42))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(5,6,4,2)+0.1,mgp=c(5,1,0))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(5,6,4,2)+0.1,mgp=c(1,1,0))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(5,6,4,2)+0.1,mgp=c(2,2,0))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(5,6,4,2)+0.1,mgp=c(1,1,0))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(5,6,4,2)+0.1)
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(5,6,4,2))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
Income = 1:3
Not = c(6, 6, 6)
Pretty = c(43, 113, 57)
Very = c(75, 178, 117)
library(VGAM)
install.packages(VGAM)
install.packages('VGAM'')
)
''
install.packages('VGAM')
library(VGAM)
fit1 = vglm(cbind(Not, Pretty, Very)~Income, family=multinomial)
summary(fit1)
fit2 = vglm(cbind(Not, Pretty, Very)~Income, family=cumulative(parallel=TRUE))
summary(fit2)
install.packages('ape')
install.packages('phytools')
install.packages("rfishbase",
repos = c("http://packages.ropensci.org", "http://cran.rstudio.com"),
type="source")
specieslist <- c("Acanthochaenus luetkenii", "Acanthurus nigricans" )
fbdata <- species(specieslist) # This took ~3 mins to run with 265 taxa
library('rfishbase')
fbdata <- species(specieslist) # This took ~3 mins to run with 265 taxa
ls(fbdata) # List of things you can export for each species
fbdata$Pic
species('Satanoperca_daemon')
species('Satanoperca daemon')
x <- species('Satanoperca daemon')
x$Pic
x$PicPreferredName
library("ape")
library("phytools")
tree <- read.nexus("treefile.nex")
setwd('/Users/hannah/Dropbox/Westneat Lab/OpenCV Sandbox/')
library('rfishbase')
lethrinids <- read.csv('lethrinid_test.csv')
lethrinids$Scientific.Name
speciesnames <- lethrinids$Scientific.Name
fbdata <- species(speciesnames)
fbdata$PicPreferredName
fbdata$PicPreferredNameM
fbdata$PicPreferredNameF
fbdata$PicPreferredNameJ
fbdata$Pic
heartbeat(server = )
rownames(fbdata)
colnames(fbdata)
list_fields('Pic')
fbdata$GoogleImage
pics <- list_fields('Pic')
merge(fbdata, pics)
fbdata$PicPreferredName
